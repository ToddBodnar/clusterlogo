/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * hostGui.java
 *
 * Created on Jul 14, 2010, 7:15:16 PM
 */

package gui;

import data.hostInfoStorage;
import data.runConfig;
import java.io.File;
import java.io.IOException;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import threads.commandThread;

/**
 *
 * @author Todd Bodnar
 */
public class hostGui extends javax.swing.JFrame {

    /** Creates new form hostGui */
    public hostGui() {
        startTime = System.currentTimeMillis();
        timedOut = 0;
        goPressCt = 0;
        totalTime = 0;
        totalData = 0;

        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        assignmentProgress = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        finishedProgress = new javax.swing.JProgressBar();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        uploadProgress = new javax.swing.JProgressBar();
        downloadProgress = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        toDoList = new javax.swing.JTextArea();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        completedList = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        inProgressList = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        addProjectsButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        decompressText = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        timeOutTextField = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel14 = new javax.swing.JLabel();
        timeOutCount = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        goPressPerSec = new javax.swing.JLabel();
        avgCompletionTime = new javax.swing.JLabel();
        projectsPerHour = new javax.swing.JLabel();
        dataGenerated = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        assignmentProgress.setString("0 / 0");
        assignmentProgress.setStringPainted(true);

        jLabel1.setText("Assignment");

        jLabel2.setText("Finished");

        finishedProgress.setString("0 / 0");
        finishedProgress.setStringPainted(true);

        jLabel3.setText("Current Upload");

        jLabel4.setText("Current Download");

        uploadProgress.setString("inactive");
        uploadProgress.setStringPainted(true);

        downloadProgress.setString("inactive");
        downloadProgress.setStringPainted(true);

        toDoList.setColumns(20);
        toDoList.setRows(5);
        jScrollPane1.setViewportView(toDoList);

        jLabel5.setText("Cluster Logo Server");

        jLabel6.setText(tools.version.SERVER_VERSION);

        jLabel8.setText("  ");

        jLabel9.setText("To Do");

        completedList.setColumns(20);
        completedList.setRows(5);
        jScrollPane2.setViewportView(completedList);

        inProgressList.setColumns(20);
        inProgressList.setRows(5);
        jScrollPane3.setViewportView(inProgressList);

        jLabel10.setText("In Progress");

        jLabel11.setText("Completed");

        addProjectsButton.setText("Add Projects");
        addProjectsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProjectsButtonActionPerformed(evt);
            }
        });

        try{
            jLabel12.setText("My IP: "+InetAddress.getLocalHost().getHostAddress());
        }catch(UnknownHostException e){JOptionPane.showMessageDialog(null,e);}

        decompressText.setText(" ");

        jLabel13.setText("Time Out (hours)");

        timeOutTextField.setText("24");

        jLabel14.setText("Projects Timed Out");

        timeOutCount.setText("0");

        jLabel16.setText("\"Go\" Presses / Second");

        jLabel17.setText("Average Completion Time");

        jLabel18.setText("Projects / Hour");

        jLabel19.setText("Data Generated");

        goPressPerSec.setText("0");

        avgCompletionTime.setText("0");

        projectsPerHour.setText("0");

        dataGenerated.setText("0 Bytes");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 299, Short.MAX_VALUE)
                        .addComponent(decompressText))
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(finishedProgress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(assignmentProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(downloadProgress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(uploadProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(addProjectsButton)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 285, Short.MAX_VALUE)
                        .addComponent(goPressPerSec))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 269, Short.MAX_VALUE)
                        .addComponent(avgCompletionTime))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 319, Short.MAX_VALUE)
                        .addComponent(projectsPerHour))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 284, Short.MAX_VALUE)
                        .addComponent(dataGenerated))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 266, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(timeOutCount)
                            .addComponent(timeOutTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(decompressText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(assignmentProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(finishedProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(uploadProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(downloadProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(timeOutTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timeOutCount)
                    .addComponent(jLabel14))
                .addGap(18, 18, 18)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(goPressPerSec))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(avgCompletionTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(projectsPerHour))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(dataGenerated))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addProjectsButton)
                    .addComponent(jLabel12))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addProjectsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProjectsButtonActionPerformed
        assignmentMakerGUI gui = new assignmentMakerGUI(getDataStorage(), this);
        gui.setVisible(true);
    }//GEN-LAST:event_addProjectsButtonActionPerformed

    /**
     * Tests hostGui
     *
    * @param args the command line arguments
    */
    public static void main(String args[]) throws IOException {
           hostGui gui = new hostGui();
           gui.setVisible(true);
           gui.setDataStorage(new hostInfoStorage());
           Thread t = new Thread(new commandThread(gui.storage, gui));
           t.start();
           Vector<String> v = new Vector();
           v.add("test1 15");
           v.add("test2 54");
           gui.getDataStorage().addTodo(new runConfig(new File("testLogo.nLogo"),"someFile.dat",10000,v));
           gui.updateView();

    }

    public void setDataStorage(hostInfoStorage storage)
    {
        this.storage = storage;
    }

    public float getTimeOutRate()
    {
        return Float.parseFloat(timeOutTextField.getText());
    }

    public void setDecompressMessage(String txt)
    {
        decompressText.setText(txt);
    }

    public hostInfoStorage getDataStorage()
    {
        return storage;
    }

    public void updateView()
    {
        toDoList.setText(storage.describeTodo());
        inProgressList.setText(storage.describeInProgress());
        completedList.setText(storage.describeCompleted());

        if(storage.getTotal()>0)
        {
            assignmentProgress.setString(storage.getAssigned()+" / "+storage.getTotal());
            assignmentProgress.setMaximum(storage.getTotal());
            assignmentProgress.setValue(storage.getAssigned());

            finishedProgress.setString(storage.getCompleted()+" / "+storage.getTotal());
            finishedProgress.setMaximum(storage.getTotal());
            finishedProgress.setValue(storage.getCompleted());
        }
    }

    public JProgressBar getUploadBar()
    {
        return uploadProgress;
    }

    public JProgressBar getDownloadBar()
    {
        return downloadProgress;
    }

    /**
     * Updates goPressPerSecond
     * @param goes The number of aditional "go" presses
     */
    public void updateGoPress(long goes)
    {
        goPressCt+=goes;
        long time = (System.currentTimeMillis()-startTime)/1000;
        goPressPerSec.setText(""+1.0f*goPressCt/time);
    }

    /**
     * Updates the averageCompletionTime label
     * @param newElement the number of milliseconds it took to complete an assignment
     */
    public void updateAverageCompletionTime(long newElement)
    {
        totalTime += newElement;
        double time = totalTime/1000/storage.getCompleted();
        String label = " seconds";
        if(time>60)
        {
            label = " minutes";
            time/=60;
        }
        if(time>60)
        {
            label = " hours";
            time/=60;
        }
        if(time>24)
        {
            label = " days";
            time/=24;
        }
        avgCompletionTime.setText(time+label);
    }

    /**
     * Updates the projectsPerHour label
     */
    public void updateProjectsPerHour()
    {
        projectsPerHour.setText(""+(storage.getCompleted())/((1.0*System.currentTimeMillis()-startTime)/1000/60/60));
    }

    public void incrementTimeOutCt()
    {
        timedOut++;
        timeOutCount.setText(""+timedOut);
    }

    /**
     * Updates the dataGenerated label
     * @param newDataLength the length, in bytes, of a result
     */
    public void updateDataGenerated(long newDataLength)
    {
        totalData += newDataLength;
        double temp = totalData;
        String label = " bytes";
        if(temp>1024)
        {
            label = " kilobytes";
            temp/=1024;
        }
        if(temp>1024)
        {
            label = " megabytes";
            temp/=1024;
        }
        if(temp>1024)
        {
            label = " gigabytes";
            temp/=1024;
        }
        if(temp>1024)
        {
            label = " terabytes";
            temp/=1024;
        }
        dataGenerated.setText(temp+label);
    }

    private hostInfoStorage storage;
    private long startTime, goPressCt, totalTime, totalData, timedOut;



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProjectsButton;
    private javax.swing.JProgressBar assignmentProgress;
    private javax.swing.JLabel avgCompletionTime;
    private javax.swing.JTextArea completedList;
    private javax.swing.JLabel dataGenerated;
    private javax.swing.JLabel decompressText;
    private javax.swing.JProgressBar downloadProgress;
    private javax.swing.JProgressBar finishedProgress;
    private javax.swing.JLabel goPressPerSec;
    private javax.swing.JTextArea inProgressList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel projectsPerHour;
    private javax.swing.JLabel timeOutCount;
    private javax.swing.JTextField timeOutTextField;
    private javax.swing.JTextArea toDoList;
    private javax.swing.JProgressBar uploadProgress;
    // End of variables declaration//GEN-END:variables

}
